# PostgreSQL Client Authentication Configuration File
# ===================================================
#
# This file is read on server startup and when the postmaster receives
# a SIGHUP signal.  If you edit the file on a running system, you have
# to SIGHUP the postmaster for the changes to take effect.  You can
# use "pg_ctl reload" to do that.

# DO NOT DISABLE!
# If you change this first entry you will need to make sure that the
# database superuser can access the database using some other method.
# Noninteractive access to all databases is required during automatic
# maintenance (custom daily cronjobs, replication, and similar tasks).
#
# Database administrative login by Unix domain socket
local   all             postgres                                peer

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     peer
# IPv4 local connections:
host    all             all             127.0.0.1/32            md5
# IPv6 local connections:
host    all             all             ::1/128                 md5

### custom configuration
#replication
{% for _group in groups['master'] %}
  {% set _ipv4 = hostvars[_group]['ansible_' + bind_interface]['ipv4']['address'] %}
host    replication     replicator     {{ _ipv4 }}/32   md5
{% endfor %}

{% for _group in groups['slave'] %}
  {% set _ipv4 = hostvars[_group]['ansible_' + bind_interface]['ipv4']['address'] %}
host    replication     replicator     {{ _ipv4 }}/32   md5
{% endfor %}

{% for _group in groups['pgpool'] %}
  {% set _ipv4 = hostvars[_group]['ansible_' + bind_interface]['ipv4']['address'] %}	
host    postgres     {{db_check_user}}     {{ _ipv4 }}/32   trust
{% endfor %}

{% for _group in groups['pgpool'] %}
  {% set _ipv4 = hostvars[_group]['ansible_' + bind_interface]['ipv4']['address'] %}
host    all     all     {{ _ipv4 }}/32   md5
{% endfor %}
