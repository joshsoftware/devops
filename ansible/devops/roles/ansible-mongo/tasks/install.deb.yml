---

- include_vars: "{{ansible_distribution}}.yml"

- name: Check if running on systemd
  command: cat /proc/1/cmdline
  register: systemd
  changed_when: false

- debug: var=systemd

- name: Add systemd configuration if present
  copy: src=mongodb.service dest=/lib/systemd/system/mongod.service owner=root group=root mode=0640
  when: ansible_service_mgr == 'systemd'

- name: Add symlink for systemd
  file: src=/lib/systemd/system/mongod.service dest=/etc/systemd/system/multi-user.target.wants/mongod.service state=link
  when: ansible_service_mgr == 'systemd'
  notify: reload systemd

- meta: flush_handlers
  when: ansible_service_mgr == 'systemd'

- name: Add APT key
  apt_key:
    url: https://www.mongodb.org/static/pgp/server-{{ mongodb_version[0:4] }}.asc
    state: present
  when: mongodb_package == 'mongodb-org'

- name: Fail when used wrong mongodb_version variable
  fail:
    msg: "mongodb_version variable should be '3.2', '4.2' or '4.4'"
  when: (mongodb_package == 'mongodb-org' and
        (mongodb_version is not defined
        or mongodb_repository[item] is not defined))
  with_items: "{{ mongodb_version[0:4] }}"

# Works for mongodb version 3.2 with xenial (Ubuntu 16) 4.2 with bionic(Ubuntu 18) and 4.4 focal (Ubuntu 20) #
- name: Add APT repository
  apt_repository: repo={{ mongodb_repository[item] }} state=present filename=mongodb-org-{{ mongodb_version[0:4] }}
  with_items: "{{ mongodb_version[0:4] }}"
  when: mongodb_package == 'mongodb-org'

- name: Install MongoDB package
  apt:
    name: ['{{mongodb_package}}', 'numactl']
    update_cache: yes
    state: present

- name: reload systemd
  shell: systemctl daemon-reload
  changed_when: false
  when: ansible_service_mgr == 'systemd'

- name: Install PyMongo package
  apt: pkg=python-pymongo state=latest
  when: not mongodb_pymongo_from_pip

- name: Install python3-dev And python3-pip
  apt:
    pkg: ['python3-dev', 'python3-pip']
    state: present
  when: mongodb_pymongo_from_pip

- name: Install PyMongo from PIP
  pip: name=pymongo state=latest
  when: mongodb_pymongo_from_pip

- name: Set log rotation
  template:
    src: templates/logrotate.j2
    dest: /etc/logrotate.d/mongodb

- name: Check monit installed or not
  command: which monit
  register: check_monit

- debug: var=check_monit

- name: setup monit conf
  template:
    src: templates/mongo_monit.j2
    dest: /etc/monit/conf.d/{{mongodb_daemon_name}}
  when: '"monit" in check_monit.stdout'
