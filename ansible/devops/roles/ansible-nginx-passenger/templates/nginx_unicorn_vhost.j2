upstream {{nginx_upstream}} {
 server unix:{{deploy_to}}/shared/tmp/sockets/unicorn.sock fail_timeout=0;
}

{% if nginx_ssl == false %}
server {
  listen 80;
  server_name {{app_domain_name}};
  root {{deploy_to}}/current/public;

  set_real_ip_from 0.0.0.0/0;
  real_ip_header X-Forwarded-For;

  #access_log <%= node['nginx']['log_dir'] %>/<%= @domain %>.access.log;
  keepalive_timeout 5;


  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

location @unicorn {
    proxy_redirect off;
    proxy_set_header      Host              $http_host;
    proxy_set_header      X-Forwarded-By    $server_addr:$server_port;
    proxy_set_header      X-Forwarded-For   $remote_addr;
    proxy_set_header      X-Forwarded-Proto $scheme;
    proxy_set_header      X-Real-IP         $remote_addr;
    proxy_set_header      CLIENT_IP         $remote_addr;
    proxy_pass_request_headers on; 

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://{{nginx_upstream}};
      break;
    }
  }

 location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root {{deploy_to}}/current/public;
  }
}

{% elif nginx_ssl == true %}
server {
  listen {{ nginx_port }};
  server_name {{ app_domain_name }};
  return 301 https://{{ app_domain_name }}$request_uri;
}

server {
  listen {{ nginx_ssl_port  }};
  server_name {{app_domain_name}};
  root {{deploy_to}}/current/public;

  set_real_ip_from 0.0.0.0/0;
  real_ip_header X-Forwarded-For;

  
  ssl on;
  ssl_certificate /etc/ssl/{{ app_domain_name }}/{{ app_domain_name }}.pem;
  ssl_certificate_key /etc/ssl/{{ app_domain_name }}/{{ app_domain_name }}.key;

  #access_log <%= node['nginx']['log_dir'] %>/<%= @domain %>.access.log;
  keepalive_timeout 5;


  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

location @unicorn {
    proxy_redirect off;
    proxy_set_header      Host              $http_host;
    proxy_set_header      X-Forwarded-By    $server_addr:$server_port;
    proxy_set_header      X-Forwarded-For   $remote_addr;
    proxy_set_header      X-Forwarded-Proto $scheme;
    proxy_set_header      X-Real-IP         $remote_addr;
    proxy_set_header      CLIENT_IP         $remote_addr;
    proxy_pass_request_headers on; 

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://{{nginx_upstream}};
      break;
    }
  }

 location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root {{deploy_to}}/current/public;
  }
}

{% endif %}